name: GitHub Action Workflow
on: 
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
env:
  DOCKER_USER: naman01
  IMAGE_NAME: poc_git_actions

  AWS_REGION: us-east-1                   # set this to your preferred AWS region,
  ECS_SERVICE: gameAppService                 # set this to your Amazon ECS service name
  ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json
  CONTAINER_NAME: gameApp  

jobs:
  liniting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Lint Action
        uses: wearerequired/lint-action@v2.3.0
      # - name: Super-Linter
      #   uses: github/super-linter@v4.10.1

  SAST:
    runs-on: ubuntu-latest
    steps:
    - name: sast steps
      run: echo "steps for sast"

  DOCKER_BUILD:
    runs-on: ubuntu-latest
    needs: [SAST, liniting ]
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: naman01/poc_git_actions
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}},value=v1.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        id: image-push
        uses: docker/build-push-action@v4  
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  
  DEPLOYMENT-On-ECS:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}  
      -  name: echo
         run: echo  ${{ steps.meta.outputs.tags }}